name: Tests

on: [push]

jobs:
  build:
    env:
      SPEASY_AMDA_USERNAME: ${{ secrets.SPEASY_AMDA_USERNAME }}
      SPEASY_AMDA_PASSWORD: ${{ secrets.SPEASY_AMDA_PASSWORD }}

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -r requirements_dev.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: install texlive for Pandoc
      run: sudo apt update && sudo apt install -y texlive pandoc && pip install wheel
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov sphinx pandoc
        pip install -r docs/requirements.txt
        pytest --cov=./ --cov-report=xml
        make doctest
    - name: Check that release process is not broken
      if: matrix.python-version == '3.7'
      run: |
        pip install setuptools wheel twine
        python setup.py sdist bdist_wheel
        twine check dist/*
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.8'
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
